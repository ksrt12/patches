From 9907cae433d6e1ddeb62abe7d8396ac512ac1b9e Mon Sep 17 00:00:00 2001
From: Kazakov Stepan <ksrt12group@gmail.com>
Date: Thu, 29 Nov 2018 02:40:50 +0300
Subject: [PATCH 3/4] Rework hw button illumination

All credits to OmniRom

Signed-off-by: DennySPB <dennyspb@gmail.com>
Signed-off-by: Kazakov Stepan <ksrt12group@gmail.com>
---
 res/values-ru/string.xml                      |  15 +++
 res/values/havoc_arrays.xml                   |  25 ----
 res/values/havoc_strings.xml                  |  27 ++---
 res/xml/havoc_settings_buttons.xml            |  67 ++++++-----
 src/com/havoc/settings/fragments/Buttons.java | 111 +++++++-----------
 5 files changed, 107 insertions(+), 138 deletions(-)
 create mode 100644 res/values-ru/string.xml

diff --git a/res/values-ru/string.xml b/res/values-ru/string.xml
new file mode 100644
index 0000000..1a65447
--- /dev/null
+++ b/res/values-ru/string.xml
@@ -0,0 +1,15 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- Button brightness -->
+    <string name="button_backlight_options_category">Подсветка кнопок</string>
+    <string name="button_backlight_enable_title">Включить подсветку</string>
+    <string name="button_backlight_title">Подсветка кнопок</string>
+    <string name="button_backlight_summary">Настройка включения и яркости</string>
+    <string name="button_backlight_on_touch_only_title">Подсветка по прикосновению к кнопкам</string>
+    <string name="button_backlight_on_touch_only_summary">Подсвечивать кнопки только при касании, а не всё время. Тайм-аут подсветки влияет на эту функцию.</string>
+    <string name="button_timeout_title">Время работы подсветки</string>
+    <string name="button_timeout_summary">Отключено при значении \"0\"</string>
+    <string name="button_link_brightness">В соответствии с экраном</string>
+    <string name="button_link_brightness_summary">Использовать яркость экрана</string>
+    <string name="button_manual_brightness">Уровень яркости</string>    
+</resources>
diff --git a/res/values/havoc_arrays.xml b/res/values/havoc_arrays.xml
index b7fcedf..7cebb37 100644
--- a/res/values/havoc_arrays.xml
+++ b/res/values/havoc_arrays.xml
@@ -27,31 +27,6 @@
         <item>3</item>
     </string-array>
 
-    <!--- Buttons backlight timeout -->
-    <string-array name="backlight_timeout_entries">
-        <item>@string/backlight_timeout_on</item>
-        <item>@string/backlight_timeout_default</item>
-        <item>@string/backlight_timeout_1s</item>
-        <item>@string/backlight_timeout_3s</item>
-        <item>@string/backlight_timeout_5s</item>
-        <item>@string/backlight_timeout_10s</item>
-        <item>@string/backlight_timeout_15s</item>
-        <item>@string/backlight_timeout_20s</item>
-        <item>@string/backlight_timeout_30s</item>
-    </string-array>
-
-    <string-array name="backlight_timeout_values">
-        <item>0</item>
-        <item>500</item>
-        <item>1000</item>
-        <item>3000</item>
-        <item>5000</item>
-        <item>10000</item>
-        <item>15000</item>
-        <item>20000</item>
-        <item>30000</item>
-    </string-array>
-
     <!-- Toast Animation -->
     <string-array name="toast_animation_entries" translatable="false">
         <item>@string/toast_none_animation</item>
diff --git a/res/values/havoc_strings.xml b/res/values/havoc_strings.xml
index c94dcb5..d8ff97d 100644
--- a/res/values/havoc_strings.xml
+++ b/res/values/havoc_strings.xml
@@ -288,17 +288,15 @@
     <string name="allow_incall_home_title">Home button when ringing</string>
     <string name="allow_incall_home_summary">Allow to use Home button when device is ringing</string>
 
-    <!-- Buttons backlight timeout -->
-    <string name="backlight_timeout_title">Button backlight timeout</string>
-    <string name="backlight_timeout_on">Enabled always</string>
-    <string name="backlight_timeout_default">0.5 sec</string>
-    <string name="backlight_timeout_1s">1 sec</string>
-    <string name="backlight_timeout_3s">3 sec</string>
-    <string name="backlight_timeout_5s">5 sec</string>
-    <string name="backlight_timeout_10s">10 sec</string>
-    <string name="backlight_timeout_15s">15 sec</string>
-    <string name="backlight_timeout_20s">20 sec</string>
-    <string name="backlight_timeout_30s">30 sec</string>
+    <!-- Button brightness -->
+    <string name="button_backlight_options_category">Backlight options</string>
+    <string name="button_backlight_enable_title">Allow button backlight</string>
+    <string name="button_link_brightness">Link to screen brightness</string>
+    <string name="button_link_brightness_summary">Button backlight brightness will adjust based on current screen brightness level</string>
+    <string name="button_manual_brightness">Brightness level</string>
+    <string name="button_timeout_title">Backlight timeout</string>
+    <string name="button_backlight_on_touch_only_title">Button backlight touch</string>
+    <string name="button_backlight_on_touch_only_summary">Button backlight will only appear when buttons are pressed rather than on all the time. Timeout still impacts this feature.</string>
 
     <!-- Dashboard conditions-->
     <string name="dashboard_category">Settings</string>
@@ -309,13 +307,6 @@
     <string name="summary_dashboard_suggestions_enabled">Dashboard suggestions are enabled</string>
     <string name="summary_dashboard_suggestions_disabled">Dashboard suggestions are disabled</string>
 
-    <!-- Enable keys backlight-->
-    <string name="button_brightness_title">Button backlight brightness</string>
-    <!-- Enable keys backlight-->
-    <string name="button_brightness_sw_title">Enable backlight</string>
-    <string name="button_backlight_on_touch_only_title">Button backlight on touch</string>
-    <string name="button_backlight_on_touch_only_summary">Enable backlight with timeout only on button touch</string>
-
     <!-- HW Keys customization -->
     <string name="action_value_default_action" translatable="false">default</string>
     <string name="action_value_select_app" translatable="false">app</string>
diff --git a/res/xml/havoc_settings_buttons.xml b/res/xml/havoc_settings_buttons.xml
index 001ec14..73d2da3 100644
--- a/res/xml/havoc_settings_buttons.xml
+++ b/res/xml/havoc_settings_buttons.xml
@@ -33,34 +33,6 @@
             android:summary="@string/swap_navigation_keys_title_summary"
 	        android:defaultValue="false" />
 
-        <com.havoc.support.preferences.CustomSeekBarPreference
-            android:key="button_brightness"
-            android:title="@string/button_brightness_title"
-            android:max="255"
-            settings:min="0"
-            settings:interval="5"
-	        android:defaultValue="255"
-            android:persistent="false" />
-
-        <SwitchPreference
-            android:key="button_brightness_sw"
-            android:title="@string/button_brightness_sw_title"
-            android:persistent="false" />
-
-        <ListPreference
-            android:dialogTitle="@string/backlight_timeout_title"
-            android:entries="@array/backlight_timeout_entries"
-            android:entryValues="@array/backlight_timeout_values"
-            android:key="backlight_timeout"
-            android:persistent="false"
-            android:title="@string/backlight_timeout_title" />
-
-        <com.havoc.support.preferences.SystemSettingSwitchPreference
-            android:key="button_backlight_on_touch_only"
-            android:title="@string/button_backlight_on_touch_only_title"
-            android:summary="@string/button_backlight_on_touch_only_summary"
-            android:defaultValue="false" />
-
         <com.havoc.support.preferences.SystemSettingSwitchPreference
             android:key="anbi_enabled_option"
             android:title="@string/anbi_title"
@@ -105,6 +77,45 @@
 
     </PreferenceCategory>
 
+    <PreferenceCategory
+        android:key="button_backlight_options_category"
+        android:title="@string/button_backlight_options_category"
+        android:dependency="hardware_keys">
+ 	    <com.havoc.support.preferences.SystemSettingSwitchPreference
+            android:key="button_backlight_enable"
+            android:title="@string/button_backlight_enable_title"
+            android:defaultValue="true"/>
+         <!--com.havoc.support.preferences.SystemSettingSwitchPreference
+            android:key="custom_button_use_screen_brightness"
+            android:title="@string/button_link_brightness"
+            android:summary="@string/button_link_brightness_summary"
+            android:defaultValue="false"
+            android:dependency="button_backlight_enable"
+            android:disableDependentsState="true" /-->
+         <com.havoc.support.preferences.CustomSeekBarPreference
+            android:key="button_manual_brightness_new"
+            android:title="@string/button_manual_brightness"
+            android:max="255"
+            settings:min="1"
+            android:persistent="false"
+            android:defaultValue="150"
+            android:dependency="button_backlight_enable" />
+         <com.havoc.support.preferences.CustomSeekBarPreference
+            android:key="button_timeout"
+            android:title="@string/button_timeout_title"
+            android:max="30"
+            settings:min="0"
+            android:persistent="false"
+            android:defaultValue="7"
+            android:dependency="button_backlight_enable" />
+         <com.havoc.support.preferences.SystemSettingSwitchPreference
+            android:key="button_backlight_on_touch_only"
+            android:title="@string/button_backlight_on_touch_only_title"
+            android:summary="@string/button_backlight_on_touch_only_summary"
+            android:defaultValue="false"
+            android:dependency="button_backlight_enable" />
+     </PreferenceCategory>
+
     <PreferenceCategory
         android:key="back_key"
         android:title="@string/hardware_keys_back_key_title" >
diff --git a/src/com/havoc/settings/fragments/Buttons.java b/src/com/havoc/settings/fragments/Buttons.java
index 7d32578..d440b37 100644
--- a/src/com/havoc/settings/fragments/Buttons.java
+++ b/src/com/havoc/settings/fragments/Buttons.java
@@ -28,6 +28,8 @@ import android.support.v7.preference.PreferenceScreen;
 import android.support.v7.preference.Preference.OnPreferenceChangeListener;
 import android.support.v14.preference.SwitchPreference;
 import android.provider.Settings;
+import android.os.PowerManager;
+import android.os.ServiceManager;
 
 import com.android.settings.R;
 
@@ -43,15 +45,16 @@ import com.havoc.support.preferences.SystemSettingSwitchPreference;
 public class Buttons extends ActionFragment implements OnPreferenceChangeListener {
 
     //Keys
-    private static final String KEY_BUTTON_BRIGHTNESS = "button_brightness";
-    private static final String KEY_BUTTON_BRIGHTNESS_SW = "button_brightness_sw";
-    private static final String KEY_BACKLIGHT_TIMEOUT = "backlight_timeout";
     private static final String HWKEY_DISABLE = "hardware_keys_disable";
     private static final String KEY_BUTTON_SWAP_KEYS = "swap_navigation_keys";
     private static final String KEY_POWER_END_CALL = "power_end_call";
     private static final String TORCH_POWER_BUTTON_GESTURE = "torch_power_button_gesture";
 
     // category keys
+    private static final String KEY_BUTTON_MANUAL_BRIGHTNESS_NEW = "button_manual_brightness_new";
+    private static final String KEY_BUTTON_TIMEOUT = "button_timeout";
+    private static final String KEY_BUTON_BACKLIGHT_OPTIONS = "button_backlight_options_category";
+
     private static final String CATEGORY_HWKEY = "hardware_keys";
     private static final String CATEGORY_HOME = "home_key";
     private static final String CATEGORY_MENU = "menu_key";
@@ -71,13 +74,13 @@ public class Buttons extends ActionFragment implements OnPreferenceChangeListene
     public static final int KEY_MASK_CAMERA = 0x20;
     public static final int KEY_MASK_VOLUME = 0x40;
 
-    private ListPreference mBacklightTimeout;
-    private CustomSeekBarPreference mButtonBrightness;
-    private SwitchPreference mButtonBrightness_sw;
     private SwitchPreference mHwKeyDisable;
     private SystemSettingSwitchPreference mSwapKeysPreference;
     private SwitchPreference mPowerEndCall;
     private ListPreference mTorchPowerButton;
+    private CustomSeekBarPreference mButtonTimoutBar;
+    private CustomSeekBarPreference mManualButtonBrightness;
+    private PreferenceCategory mButtonBackLightCategory;
 
     @Override
     public void onCreate(Bundle icicle) {
@@ -90,6 +93,28 @@ public class Buttons extends ActionFragment implements OnPreferenceChangeListene
         final ContentResolver resolver = getActivity().getContentResolver();
         final PreferenceScreen prefScreen = getPreferenceScreen();
 
+	    mManualButtonBrightness = (CustomSeekBarPreference) findPreference(
+                KEY_BUTTON_MANUAL_BRIGHTNESS_NEW);
+        final int customButtonBrightness = getResources().getInteger(
+                com.android.internal.R.integer.config_button_brightness_default);
+        final int currentBrightness = Settings.System.getInt(resolver,
+                Settings.System.CUSTOM_BUTTON_BRIGHTNESS, customButtonBrightness);
+        PowerManager pm = (PowerManager)getActivity().getSystemService(Context.POWER_SERVICE);
+        mManualButtonBrightness.setMax(pm.getMaximumScreenBrightnessSetting());
+        mManualButtonBrightness.setValue(currentBrightness);
+        mManualButtonBrightness.setOnPreferenceChangeListener(this);
+         mButtonTimoutBar = (CustomSeekBarPreference) findPreference(KEY_BUTTON_TIMEOUT);
+        int currentTimeout = Settings.System.getInt(resolver,
+                Settings.System.BUTTON_BACKLIGHT_TIMEOUT, 0);
+        mButtonTimoutBar.setValue(currentTimeout);
+        mButtonTimoutBar.setOnPreferenceChangeListener(this);
+         final boolean enableBacklightOptions = getResources().getBoolean(
+                com.android.internal.R.bool.config_button_brightness_support);
+         mButtonBackLightCategory = (PreferenceCategory) findPreference(KEY_BUTON_BACKLIGHT_OPTIONS);
+        if (!enableBacklightOptions) {
+            prefScreen.removePreference(mButtonBackLightCategory);
+        }
+
         final boolean needsNavbar = ActionUtils.hasNavbarByDefault(getActivity());
         final PreferenceCategory hwkeyCat = (PreferenceCategory) prefScreen
                 .findPreference(CATEGORY_HWKEY);
@@ -104,47 +129,9 @@ public class Buttons extends ActionFragment implements OnPreferenceChangeListene
 
             mSwapKeysPreference = (SystemSettingSwitchPreference) prefScreen.findPreference(
                 KEY_BUTTON_SWAP_KEYS);
-
-            final boolean variableBrightness = getResources().getBoolean(
-                    com.android.internal.R.bool.config_deviceHasVariableButtonBrightness);
-
-            mBacklightTimeout =
-                    (ListPreference) findPreference(KEY_BACKLIGHT_TIMEOUT);
-
-            mButtonBrightness =
-                    (CustomSeekBarPreference) findPreference(KEY_BUTTON_BRIGHTNESS);
-
-            mButtonBrightness_sw =
-                    (SwitchPreference) findPreference(KEY_BUTTON_BRIGHTNESS_SW);
-
-                if (mBacklightTimeout != null) {
-                    mBacklightTimeout.setOnPreferenceChangeListener(this);
-                    int BacklightTimeout = Settings.System.getInt(getContentResolver(),
-                            Settings.System.BUTTON_BACKLIGHT_TIMEOUT, 500);
-                    mBacklightTimeout.setValue(Integer.toString(BacklightTimeout));
-                    mBacklightTimeout.setSummary(mBacklightTimeout.getEntry());
-                }
-
-                if (variableBrightness) {
-                    hwkeyCat.removePreference(mButtonBrightness_sw);
-                    if (mButtonBrightness != null) {
-                        int ButtonBrightness = Settings.System.getInt(getContentResolver(),
-                                Settings.System.BUTTON_BRIGHTNESS, 255);
-                        mButtonBrightness.setValue(ButtonBrightness / 1);
-                        mButtonBrightness.setOnPreferenceChangeListener(this);
-                    }
-                } else {
-                    hwkeyCat.removePreference(mButtonBrightness);
-                    if (mButtonBrightness_sw != null) {
-                        mButtonBrightness_sw.setChecked((Settings.System.getInt(getContentResolver(),
-                                Settings.System.BUTTON_BRIGHTNESS, 1) == 1));
-                        mButtonBrightness_sw.setOnPreferenceChangeListener(this);
-                    }
-                }
         } else {
             prefScreen.removePreference(hwkeyCat);
         }
-
         // bits for hardware keys present on device
         final int deviceKeys = getResources().getInteger(
                 com.android.internal.R.integer.config_deviceHardwareKeys);
@@ -244,27 +231,7 @@ public class Buttons extends ActionFragment implements OnPreferenceChangeListene
 
     public boolean onPreferenceChange(Preference preference, Object newValue) {
         ContentResolver resolver = getActivity().getContentResolver();
-        if (preference == mBacklightTimeout) {
-            String BacklightTimeout = (String) newValue;
-            int BacklightTimeoutValue = Integer.parseInt(BacklightTimeout);
-            Settings.System.putInt(getActivity().getContentResolver(),
-                    Settings.System.BUTTON_BACKLIGHT_TIMEOUT, BacklightTimeoutValue);
-            int BacklightTimeoutIndex = mBacklightTimeout
-                    .findIndexOfValue(BacklightTimeout);
-            mBacklightTimeout
-                    .setSummary(mBacklightTimeout.getEntries()[BacklightTimeoutIndex]);
-            return true;
-        } else if (preference == mButtonBrightness) {
-            int value = (Integer) newValue;
-            Settings.System.putInt(getActivity().getContentResolver(),
-                    Settings.System.BUTTON_BRIGHTNESS, value * 1);
-            return true;
-        } else if (preference == mButtonBrightness_sw) {
-            boolean value = (Boolean) newValue;
-            Settings.System.putInt(getActivity().getContentResolver(),
-                    Settings.System.BUTTON_BRIGHTNESS, value ? 1 : 0);
-            return true;
-        } else if (preference == mHwKeyDisable) {
+        if (preference == mHwKeyDisable) {
             boolean value = (Boolean) newValue;
             Settings.Secure.putInt(getContentResolver(), Settings.Secure.HARDWARE_KEYS_DISABLE,
                     value ? 1 : 0);
@@ -282,8 +249,18 @@ public class Buttons extends ActionFragment implements OnPreferenceChangeListene
                 Settings.Secure.putInt(resolver, Settings.Secure.CAMERA_DOUBLE_TAP_POWER_GESTURE_DISABLED, 1);
             }
             return true;
-        }
-        return false;
+        } else if (preference == mButtonTimoutBar) {
+            int buttonTimeout = (Integer) newValue;
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.BUTTON_BACKLIGHT_TIMEOUT, buttonTimeout);
+        } else if (preference == mManualButtonBrightness) {
+            int buttonBrightness = (Integer) newValue;
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.CUSTOM_BUTTON_BRIGHTNESS, buttonBrightness);
+        } else {
+	    return false; 
+	    }
+        return true;
     }
 
     @Override
-- 
2.20.1

